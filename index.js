const express = require("express");
const app = express();
const Botly = require("botly");
const axios = require("axios");
const os = require("os");
const https = require("https");

const botly = new Botly({
	accessToken: process.env.PAGE_ACCESS_TOKEN,
	notificationType: Botly.CONST.REGULAR,
	FB_URL: "https://graph.facebook.com/v2.6/",
});

const { createClient } = require("@supabase/supabase-js");
const supabase = createClient(process.env.SB_URL, process.env.SB_KEY, { auth: { persistSession: false} });

/* ----- ESSENTIALS ----- */

app.use(express.static("public"));
app.set("view engine", "ejs");
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

function formatBytes(bytes) {
    const sizes = ["Bytes", "KB", "MB", "GB", "TB"];
    if (bytes === 0) return "0 Byte";
    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    return Math.round(bytes / Math.pow(1024, i), 2) + " " + sizes[i];
};
  
app.get("/", (req, res) => {
  const memoryUsage = process.memoryUsage();
  let uptimeInSeconds = process.uptime();
  
  let uptimeString = "";
  if (uptimeInSeconds < 60) {
    uptimeString = `${uptimeInSeconds.toFixed()} seconds`;
  } else if (uptimeInSeconds < 3600) {
    uptimeString = `${(uptimeInSeconds / 60).toFixed()} minutes`;
    } else if (uptimeInSeconds < 86400) {
      uptimeString = `${(uptimeInSeconds / 3600).toFixed()} hours`;
    } else {
      uptimeString = `${(uptimeInSeconds / 86400).toFixed()} days`;
    }
  
    const osInfo = {
      totalMemoryMB: (os.totalmem() / (1024 * 1024)).toFixed(2),
      freeMemoryMB: (os.freemem() / (1024 * 1024)).toFixed(2),
      cpus: os.cpus(),
    };
  
    res.render("index", { memoryUsage, uptimeString, formatBytes, osInfo });
});

/* ----- MAGIC ----- */
app.post("/webhook", (req, res) => {
  if (req.body.message) {
    onMessage(req.body.message.sender.id, req.body.message);
  } else if (req.body.postback) {
    onPostBack(req.body.postback.message.sender.id, req.body.postback.message, req.body.postback.postback);
  }
  res.sendStatus(200);
});

app.get("/ping", (req, res) => { res.status(200).json({ message: "Ping successful" }); });

/* ----- DB Qrs ----- */
async function createUser(user) {
    const { data, error } = await supabase
    .from("notiplus")
    .insert([ user ]);
    
    if (error) {
        throw new Error("Error creating user : ", error);
    } else {
        return data
    }
};
  
async function updateUser(id, update) {
    const { data, error } = await supabase
    .from("notiplus")
    .update( update )
    .eq("uid", id);
    
    if (error) {
        throw new Error("Error updating user : ", error);
    } else {
        return data
    }
};
  
async function userDb(userId) {
  const { data, error } = await supabase
  .from("notiplus")
  .select("*")
  .eq("uid", userId);
  
  if (error) {
    console.error("Error checking user:", error);
  } else {
    return data
  }
};

async function keysDb(userId) {
  const { data, error } = await supabase
  .from("keys")
  .select("*")
  .eq("key", userId);
  
  if (error) {
    console.error("Error checking user:", error);
  } else {
    return data
  }
};

async function updatekey(id, update) {
  const { data, error } = await supabase
  .from("keys")
  .update( update )
  .eq("key", id);
  
  if (error) {
      throw new Error("Error updating user : ", error);
  } else {
      return data
  }
};

async function pingURL(url) {
  try {
    const response = await axios.get(url);
    if (response.status === 200) {
      return `Ping to ${url} successful`;
    } else {
      throw new Error(`Ping to ${url} failed with status code: ${response.status}`);
    }
  } catch (error) {
    throw new Error(`Ping to ${url} failed: ${error.message}`);
  }
}

async function keepAppRunning() {
  setInterval(async () => {
    try {
      const renderUrl = `${process.env.RENDER_EXTERNAL_URL}/ping`;
      const myServerUrl = `https://${process.env.MYSERVER}/auto`;

      const response1 = await pingURL(renderUrl);
      const response2 = await pingURL(myServerUrl);

      console.log(response1);
      console.log(response2);
    } catch (error) {
      console.error('Failed:', error.message);
    }
  }, 5 * 60 * 1000); // Run every 5 minutes
}

/* ----- HANDELS ----- */

const onMessage = async (senderId, message) => {
    if (message.message.text) {

      if (message.message.text.includes("ุญุฐู")) {
        await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
        .then((data, error) => {
          if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
          botly.sendText({id: senderId, text: "ุชู ุฅูุบุงุก ุงูุนูููุฉ โ"});
        });
      } else if (message.message.text.includes("ุชู")) {
        console.log(message);
        botly.sendText({id: senderId, text: "โ"}, function (err, data) {
          console.log("data :", data);
          console.log("err :", err);
        });
      } else {
        const user = await userDb(senderId);
        if (user[0]) {
          if (user[0].approved == true) {
            if (user[0].step == null) {
              if (/\d+/.test(message.message.text)) {
                var numbers = message.message.text.match(/\d+/g).join("");
                if (numbers.length == 10 && numbers.startsWith("05")) {
                  try {
                    botly.sendText({id: senderId, text: "ุฅูุชุธุฑ ููููุงู... ๐ด\nุณูุชู ุฅุฑุณุงู ุฑูุฒ ๐ข ุฃู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู ูุจุงุดุฑุฉ ๐โ."}, async () => {
                      const sms = await axios.get(`https://${process.env.MYSERVER}/sendotp?num=${numbers.slice(1)}`);
                    
                    if (sms.data.status == "ok") {
                      await updateUser(senderId, {step: "sms", num: numbers.slice(1), lastsms: new Date().getTime() + 5 * 60 * 1000})
                      .then((data, error) => {
                        if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                        botly.sendText({id: senderId, text: "ุชู ุฅุฑุณุงู ุงูุฑูุฒ ุฅูู ุงูุฑูู ๐ฌ\nูุฑุฌู ูุณุฎ ุงูุฑุณุงูุฉ ๐ ุฃู ูุชุงุจุฉ ุงูุงุฑูุงู ุงูุชู ูุตูุชู ๐ข"});
                      });
                    } else if (sms.data.status == "sent") {
                      botly.sendText({id: senderId, text: "ุชู ุจุงููุนู ุฅุฑุณุงู ุงูุฑูุฒ ุงูุฑุฌุงุก ุงูุงูุชุธุงุฑ ููููุง ู ุฃุนุฏ ุงูุญุงููุฉ"});
                    } else if (sms.data.status == "6g") {
                      
                      if (sms.data.success == 6) {
                        await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                        .then((data, error) => {
                          if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                          if (parseInt(sms.data.new) > 8) {
                            botly.sendButtons({
                              id: senderId,
                              text: `ุชู ุชุณุฌูู ุฑุตูุฏ ุบูุฑ ุตุญูุญ (${sms.data.new}). ุงุถุบุท ุนูู ุชุนุจุฆุฉ ููุฃุตูุงุญ`,
                              buttons: [
                                botly.createPostbackButton("ุชุนุจุฆุฉ ๐", `${numbers.slice(1)}`)
                              ]
                            });
                          } else {
                            botly.sendText({id: senderId, text: `ุชู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู ุจูุฌุงุญ ๐ฅณโ.\n\nโน๏ธ ูุนูููุงุช :\n\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${sms.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${sms.data.until}.\n\n๐ ููุงุญุธุงุช ูููุฏุฉ ๐คญ\n\nโข ุงุฐุง ูู ุชุดุชุบู ุงูุงูุชุฑูุช ุดุบู ูุถุน ุงูุทูุฑุงู ู ุฃูููู โ๏ธ.\nโข ุงูุฃูุชุฑูุช ุตุงูุญุฉ ููุฏุฉ ุฃุณุจูุน ูุงูู ๐.\nโข ุฅุฐุง ุฃูููุช ุงูุฃูุชุฑูุช ููููู ุชูุนูููุง ูู ุฃู ููุช ูุฌุฏุฏุงู ๐ณ๐.`});
                          }
                          
                        });
                      } else if (sms.data.success == 0) {
                        const gb = sms.data.new.split(".")[0];
                        if (gb <= 3) { // not more then 3
                          await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                          .then((data, error) => {
                            if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                             botly.sendButtons({
                              id: senderId,
                              text: `ุชู ุงููุตูู ููุญุฏ ุงูุงูุตู ๐ซ\nุฅุฐุง ุงุฑุฏุช ุงูุญุตูู ุนูู ุฃูุซุฑ ูู (${sms.data.new}) ุฅุถุบุท ุนูู ุชุนุจุฆุฉ ๐๐.\n\nููุงุญุธุฉ ๐ :\nโข ุฃูุตู ุญุฏ ูู 6 ุฌูุบุง ุฃู 7 ุฌูุบุง โ.`,
                              buttons: [
                                botly.createPostbackButton("ุชุนุจุฆุฉ ๐", `${numbers.slice(1)}`)
                              ]
                            });
                          });
                        } else {
                          await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                          .then((data, error) => {
                            if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                            botly.sendText({id: senderId, text: `ุนุฐุฑุง ๐.\nูุฏูู ุจุงููุนู ูููุฉ ูุงููุฉ ูู ุงูููุช ุงูุญุงูู โ.\nููููู ุฅุนุงุฏุฉ ุงูุชุนุจุฆุฉ ุนูุฏูุง ูููู ุฑุตูุฏู ุฃูู ุฃู ูุณุงูู 3 ุฌูุบุง ๐.\n\nโน๏ธ ูุนูููุงุช :\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${sms.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${sms.data.until}.`});
                          });
                        }
                      } else {
                        await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                        .then((data, error) => {
                          if (parseInt(sms.data.new) > 8) {
                            botly.sendButtons({
                              id: senderId,
                              text: `ุชู ุชุณุฌูู ุฑุตูุฏ ุบูุฑ ุตุญูุญ (${sms.data.new}). ุงุถุบุท ุนูู ุชุนุจุฆุฉ ููุฃุตูุงุญ`,
                              buttons: [
                                botly.createPostbackButton("ุชุนุจุฆุฉ ๐", `${numbers.slice(1)}`)
                              ]
                            });
                          } else {
                            botly.sendText({id: senderId, text: `ุชู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู ุจูุฌุงุญ ๐ฅณโ.\n\nโน๏ธ ูุนูููุงุช :\n\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${sms.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${sms.data.until}.\n\n๐ ููุงุญุธุงุช ูููุฏุฉ ๐คญ\n\nโข ุงุฐุง ูู ุชุดุชุบู ุงูุงูุชุฑูุช ุดุบู ูุถุน ุงูุทูุฑุงู ู ุฃูููู โ๏ธ.\nโข ุงูุฃูุชุฑูุช ุตุงูุญุฉ ููุฏุฉ ุฃุณุจูุน ูุงูู ๐.\nโข ุฅุฐุง ุฃูููุช ุงูุฃูุชุฑูุช ููููู ุชูุนูููุง ูู ุฃู ููุช ูุฌุฏุฏุงู ๐ณ๐.`});
                          }
                        });
                      }

                    } else if (sms.data.status == "welcome") {
                      botly.sendText({id: senderId, text: "ูุจุฏู ุฃู ูุฐุง ุงูุฑูู ุฌุฏูุฏ ุงูุฑุฌุงุก ุงูุชุงูุฏ ุฃูู ููุฒ. ุฃุนุฏ ุงุฑุณุงู ุงูุฑูู ูุชุณุฌููู."});
                    } else if (sms.data.status == "down") {
                      botly.sendText({id: senderId, text: "502!\nููุฌุฏ ูุดููุฉ ูู ุณูุฑูุฑ ุงูุฑูุฏู ๐ฝ (ูุฏ ูุฏูู ุงูุงูุฑ ูุณุงุนุงุช) ูุฑุฌู ุงููุญุงููุฉ ูู ููุช ุงุฎุฑ."});
                    }  else if (sms.data.status == "bad") {
                      botly.sendText({id: senderId, text: "502!\nููุฌุฏ ูุดููุฉ ูู ุณูุฑูุฑ ุงูุฑูุฏู ๐ฝ (ุงุฑุณู ุงูุฑูู ุจุนุฏ ูููู) ูุฑุฌู ุงููุญุงููุฉ ูู ููุช ุงุฎุฑ."});
                    }
                    });
                  } catch (error) {
                    //
                  }
                } else {
                  botly.sendText({id: senderId, text: "ูุฑุฌู ุฅุฏุฎุงู ุฃุฑูุงู ุงูุฑูุฏู ููุท!"});
                }
              } else {
                botly.sendText({id: senderId, text: "ูุฑุฌู ุฅุฏุฎุงู ุฃุฑูุงู ุงูุฑูุฏู ููุท!"});
              }
            } else {
              // sms step
              if (/\d+/.test(message.message.text)) {
                var numbers = message.message.text.match(/\d+/g).join('');
              if (numbers.length === 6 && !isNaN(numbers)) {
                if (user[0].lastsms > new Date().getTime()) {
                try {
                  botly.sendText({id: senderId, text: "ุฅูุชุธุฑ ููููุงู... ุณูุชู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู"}, async () => {
                    const otp = await axios.get(`https://${process.env.MYSERVER}/verifyotp?num=${user[0].num}&otp=${numbers}`);
                  if (otp.data.success == 6) {
                    await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                    .then((data, error) => {
                      if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                      botly.sendText({id: senderId, text: `ุชู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู ุจูุฌุงุญ ๐ฅณโ.\n\nโน๏ธ ูุนูููุงุช :\n\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${otp.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${otp.data.until}.\n\n๐ ููุงุญุธุงุช ูููุฏุฉ ๐คญ\n\nโข ุงุฐุง ูู ุชุดุชุบู ุงูุงูุชุฑูุช ุดุบู ูุถุน ุงูุทูุฑุงู ู ุฃูููู โ๏ธ.\nโข ุงูุฃูุชุฑูุช ุตุงูุญุฉ ููุฏุฉ ุฃุณุจูุน ูุงูู ๐.\nโข ุฅุฐุง ุฃูููุช ุงูุฃูุชุฑูุช ููููู ุชูุนูููุง ูู ุฃู ููุช ูุฌุฏุฏุงู ๐ณ๐.`});
                    });
                  } else if (otp.data.success == 0) {
                    const gb = otp.data.new.split(".")[0];
                    if (gb <= 3) { // not more then 3
                      await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                    .then((data, error) => {
                      if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                      
                      botly.sendButtons({
                        id: senderId,
                        text: `ุชู ุงููุตูู ููุญุฏ ุงูุงูุตู ๐ซ\nุฅุฐุง ุงุฑุฏุช ุงูุญุตูู ุนูู ุฃูุซุฑ ูู (${otp.data.new}) ุฅุถุบุท ุนูู ุชุนุจุฆุฉ ๐๐.\n\nููุงุญุธุฉ ๐ :\nโข ุฃูุตู ุญุฏ ูู 6 ุฌูุบุง ุฃู 7 ุฌูุบุง โ.`,
                        buttons: [
                          botly.createPostbackButton("ุชุนุจุฆุฉ ๐", `${numbers.slice(1)}`)
                        ]});
                    });

                    } else {
                      await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                    .then((data, error) => {
                      if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                      botly.sendText({id: senderId, text: `ุนุฐุฑุง ๐.\nูุฏูู ุจุงููุนู ูููุฉ ูุงููุฉ ูู ุงูููุช ุงูุญุงูู โ.\nููููู ุฅุนุงุฏุฉ ุงูุชุนุจุฆุฉ ุนูุฏูุง ูููู ุฑุตูุฏู ุฃูู ุฃู ูุณุงูู 3 ุฌูุบุง ๐.\n\nโน๏ธ ูุนูููุงุช :\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${otp.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${otp.data.until}.`});
                    });
                    }
                  } else {
                    await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                    .then((data, error) => {
                      if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                      botly.sendText({id: senderId, text: `ุชู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู ุจูุฌุงุญ ๐ฅณโ.\n\nโน๏ธ ูุนูููุงุช :\n\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${otp.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${otp.data.until}.\n\n๐ ููุงุญุธุงุช ูููุฏุฉ ๐คญ\n\nโข ุงุฐุง ูู ุชุดุชุบู ุงูุงูุชุฑูุช ุดุบู ูุถุน ุงูุทูุฑุงู ู ุฃูููู โ๏ธ.\nโข ุงูุฃูุชุฑูุช ุตุงูุญุฉ ููุฏุฉ ุฃุณุจูุน ูุงูู ๐.\nโข ุฅุฐุง ุฃูููุช ุงูุฃูุชุฑูุช ููููู ุชูุนูููุง ูู ุฃู ููุช ูุฌุฏุฏุงู ๐ณ๐.`});
                    });
                  }
                  });
                } catch (error) {
                  if (error.response.status == 401 || error.response.status == 400) {
                    botly.sendButtons({
                      id: senderId,
                      text: "ุงูุฑูุฒ ุงูุฐู ุฃุฏุฎูุชู ุบูุฑ ุตุญูุญ โ",
                      buttons: [
                        botly.createPostbackButton("ุฅูุบุงุก ุงูุนูููุฉ โ", "del")
                      ]});
                  } else if (error.response.status == 502) {
                    botly.sendText({id: senderId, text: "ุฎุทุฃ ูู ุณูุฑูุฑ ุฃูุฑูุฏู. ุฃุนุฏ ุงุฏุฎุงู ุงูุฑูุฒ โน๏ธ"});
                  } else {
                    console.log("ERR access_token : ", error.response.status);
                  }
                }
              } else {
                await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                .then((data, error) => {
                  if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                  botly.sendText({id: senderId, text: "โน๏ธ ุฅูุชูู ููุช ุงุฏุฎุงู ุงูุฑูุฒ. ุงููุฑุฌู ุทูุจ ุฑูุฒ ุงุฎุฑ."});
                });
              }
              } else {
                botly.sendButtons({
                  id: senderId,
                  text: "ูุฑุฌู ุฅุฏุฎุงู ุงูุฑูุฒ ุงููุชููู ูู 6 ุงุฑูุงู ุงูุฐู ูุตูู.",
                  buttons: [
                    botly.createPostbackButton("ุฅูุบุงุก ุงูุนูููุฉ โ", "del")
                  ]});
              }
              } else {
                botly.sendButtons({
                  id: senderId,
                  text: "ูุฑุฌู ุฅุฏุฎุงู ุงูุฑูุฒ ุงููุชููู ูู 6 ุงุฑูุงู ุงูุฐู ูุตูู.",
                  buttons: [
                    botly.createPostbackButton("ุฅูุบุงุก ุงูุนูููุฉ โ", "del")
                  ]});
              }
            }
          } else {
            if (message.message.text.length == 10) {
              const key = await keysDb(message.message.text);
              if (key[0] && key[0].used == false) {
                await updatekey(message.message.text, {used: true})
                .then(async (data, error) => {
                  if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                  await updateUser(senderId, {approved: true})
                .then((data, error) => {
                  if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                  botly.sendText({id: senderId, text: "ุชู ุชูุซููู โ๏ธ.\nูุฐุง ุงูุจูุช ุฎุงุต ุจุชุณุฌูู ุงูุฑูุฏู 6 ุฌูุบุง ู ููููู ุงุณุชุนูุงูู ุงูุงู ๐ฑ.\nููุงุท ูููุฉ ๐ฃ :\nโข ูุง ุชูู ุจูุดุงุฑูุฉ ุงูุจูุช ูุน ุงูุงุฎุฑูู.\nโข ูุง ุชูู ุจุชุณุฌูู ุงูุงุดุฎุงุต ุงูุฐูู ูุง ุชุนุฑููู.\nโข ูุง ุชูู ุจูุดุงุฑูุฉ ููุชุงุญู ูุฃูู ูู ูุนูู ููุฃุฎุฑูู.\nโข ูุง ุชูู ุจูุดุงุฑูุฉ ููุทุฉ ุดุงุดุฉ ูุน ุงูุงุฎุฑูู ุงู ูุดุฑูุง ูู ุฃู ููุงู.\n- ูู ุญุงูุฉ ุฎุฑู ูุง ุฐูุฑ ุงุนูุงู ๐๐ป ุงูุช ุชุนุฑุถ ููุณู ููุฅุฒุงูุฉ ูู ุงููุดุฑูุน โ.\nููุฒุงุช ุงูุจูุช ๐ :\nโข ุชูุนูู 6 ุฌูุบุง ููููุฉ.\nโข ุงุฐุง ุงุณุชูููุช ุงูู 6 ุฌูุบุง ููููู ุชูุนูููุง ูุฑุฉ ุงุฎุฑู ูู ุฃู ููุช.\nุงูุดุฑุงุฆุญ ุงููุฏุนููุฉ :\n- ุบููุฏ.\n- ุฏููุง.\n- ุฏููุง+.\n- ููุฒ (ูุฑูุจุง).\n"});
                });
                });
              } else {
                botly.sendButtons({
                  id: senderId,
                  text: "ุงูุช ุบูุฑ ููุซู โ ูุฑุฌู ุฅุฏุฎุงู ุงูููุชุงุญ ุงูุตุญูุญ ุงูุฐู ูุฏูู ูู ุงููุทูุฑ ๐",
                  buttons: [
                    botly.createWebURLButton("ุญุณุงุจ ุงููุทูุฑ ๐ป๐ค", "facebook.com/0xNoti/")
                  ]});
              }
            } else {
              botly.sendButtons({
                id: senderId,
                text: "ุงูุช ุบูุฑ ููุซู โ ูุฑุฌู ุฅุฏุฎุงู ุงูููุชุงุญ ุงูุฐู ูุฏูู ูู ุงููุทูุฑ ๐",
                buttons: [
                  botly.createWebURLButton("ุญุณุงุจ ุงููุทูุฑ ๐ป๐ค", "facebook.com/0xNoti/")
                ]});
            }
          }
        } else {
            await createUser({uid: senderId, step: null, approved: null, num: null, token: null, lastsms: null})
            .then((data, error) => {
              botly.sendButtons({
                id: senderId,
                text: "ูุฑุญุจุง ๐๐ป\nูุฐุง ุงูุจูุช ุบูุฑ ูุชุงุญ ููุฌููุน! ๐คซ\nุงุฐุง ููุช ูุฏ ุชุญุตูุช ุนููู ูู ุตุงุญุจ ุงููุดุฑูุน ูู ุงูููุชุฑุถ ุงูู ุชุญุตูุช ุนูู ููุชุงุญ ุงูุชูุนูู ุงูุถุง ๐.\nูุฑุฌู ุฅุฏุฎุงู ููุชุงุญ ุงูุชูุนูู ูุจุฏุฃ ุงูุงุณุชุฎุฏุงู ๐.",
                buttons: [
                  botly.createWebURLButton("ุญุณุงุจ ุงููุจุฑูุฌ ๐ป๐ค", "facebook.com/0xNoti/")
                ]});
              });
            }
      }
    } else if (message.message.attachments[0].payload.sticker_id) {
        botly.sendText({id: senderId, text: "(Y)"});
    } else if (message.message.attachments[0].type == "image" || message.message.attachments[0].type == "audio" || message.message.attachments[0].type == "video") {
        botly.sendText({id: senderId, text: "ุงููุณุงุฆุท ุบูุฑ ููุจููุฉ! ูุฑุฌู ุงุฑุณุงู ุงุฑูุงู ููุท."});
    }
};


const onPostBack = async (senderId, message, postback) => {
  if (message.postback){ // Normal (buttons)
      if (postback == "GET_STARTED"){
      } else if (postback == "del") {
        await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
        .then((data, error) => {
          if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
          botly.sendText({id: senderId, text: "ุชู ุฅูุบุงุก ุงูุนูููุฉ โ"});
        });
      } else if (message.postback.title == "ุชุนุจุฆุฉ ๐") {
        try {
          botly.sendText({id: senderId, text: "ุฅูุชุธุฑ ููููุงู... ๐ด\nุณูุชู ุฅุฑุณุงู ุฑูุฒ ๐ข ุฃู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู ูุจุงุดุฑุฉ ๐โ."}, async () => {
            const refill = await axios.get(`https://${process.env.MYSERVER}/refill?num=${postback}`);
            
            if (refill.data.status == "ok") {

            } else if (refill.data.status == "sent") {

            } else if (refill.data.status == "6g") {
            if (refill.data.success == 6) {
              await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
              .then((data, error) => {
                if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                botly.sendText({id: senderId, text: `ุชู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู ุจูุฌุงุญ ๐ฅณโ.\n\nโน๏ธ ูุนูููุงุช :\n\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${refill.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${refill.data.until}.\n\n๐ ููุงุญุธุงุช ูููุฏุฉ ๐คญ\n\nโข ุงุฐุง ูู ุชุดุชุบู ุงูุงูุชุฑูุช ุดุบู ูุถุน ุงูุทูุฑุงู ู ุฃูููู โ๏ธ.\nโข ุงูุฃูุชุฑูุช ุตุงูุญุฉ ููุฏุฉ ุฃุณุจูุน ูุงูู ๐.\nโข ุฅุฐุง ุฃูููุช ุงูุฃูุชุฑูุช ููููู ุชูุนูููุง ูู ุฃู ููุช ูุฌุฏุฏุงู ๐ณ๐.`});
              });
            } else if (refill.data.success == 0) {
              const gb = refill.data.new.split(".")[0];
              if (gb <= 3) { // not more then 3
                await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                .then((data, error) => {
                  if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                   botly.sendButtons({
                    id: senderId,
                    text: `ุชู ุงููุตูู ููุญุฏ ุงูุงูุตู ๐ซ\nุฅุฐุง ุงุฑุฏุช ุงูุญุตูู ุนูู ุฃูุซุฑ ูู (${refill.data.new}) ุฅุถุบุท ุนูู ุชุนุจุฆุฉ ๐๐.\n\nููุงุญุธุฉ ๐ :\nโข ุฃูุตู ุญุฏ ูู 6 ุฌูุบุง ุฃู 7 ุฌูุบุง โ.`,
                    buttons: [
                      botly.createPostbackButton("ุชุนุจุฆุฉ ๐", `${postback}`)
                    ]
                  });
                });
              } else {
                await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
                .then((data, error) => {
                  if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                  botly.sendText({id: senderId, text: `ุนุฐุฑุง ๐.\nูุฏูู ุจุงููุนู ูููุฉ ูุงููุฉ ูู ุงูููุช ุงูุญุงูู โ.\nููููู ุฅุนุงุฏุฉ ุงูุชุนุจุฆุฉ ุนูุฏูุง ูููู ุฑุตูุฏู ุฃูู ุฃู ูุณุงูู 3 ุฌูุบุง ๐.\n\nโน๏ธ ูุนูููุงุช :\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${refill.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${refill.data.until}.`});
                });
              }
            } else {
              await updateUser(senderId, {step: null, num: null, token: null, lastsms: null})
              .then((data, error) => {
                if (error) { botly.sendText({id: senderId, text: "ุญุฏุซ ุฎุทุฃ"}); }
                botly.sendText({id: senderId, text: `ุชู ุชูุนูู ุฃูุชุฑูุช ูุฌุงููุฉ ูู ุดุฑูุญุชู ุจูุฌุงุญ ๐ฅณโ.\n\nโน๏ธ ูุนูููุงุช :\n\n๐ถ โข ุฑุตูุฏู ุงูุงู : (${refill.data.new}).\n๐ โข ุตุงูุญ ุฅูู ุบุงูุฉ : ${refill.data.until}.\n\n๐ ููุงุญุธุงุช ูููุฏุฉ ๐คญ\n\nโข ุงุฐุง ูู ุชุดุชุบู ุงูุงูุชุฑูุช ุดุบู ูุถุน ุงูุทูุฑุงู ู ุฃูููู โ๏ธ.\nโข ุงูุฃูุชุฑูุช ุตุงูุญุฉ ููุฏุฉ ุฃุณุจูุน ูุงูู ๐.\nโข ุฅุฐุง ุฃูููุช ุงูุฃูุชุฑูุช ููููู ุชูุนูููุง ูู ุฃู ููุช ูุฌุฏุฏุงู ๐ณ๐.`});
              });
            }

          } else if (refill.data.status == "welcome") {
            //
          } else if (refill.data.status == "down") {
            //
          }  else if (refill.data.status == "bad") {
            botly.sendText({id: senderId, text: "502!\nููุฌุฏ ูุดููุฉ ูู ุณูุฑูุฑ ุงูุฑูุฏู ๐ฝ (ุงุฑุณู ุงูุฑูู ุจุนุฏ ูููู) ูุฑุฌู ุงููุญุงููุฉ ูู ููุช ุงุฎุฑ."});
          }
          });
        } catch (error) {
          //
        }
      } else if (postback == "3") {
          botly.sendText({id: senderId, text: "ุญุณูุง. ูุฑุฌู ุฅุฏุฎุงู ุฑูู ุขุฎุฑ ๐ฑ"});
      } else if (postback.startsWith("1")) {
      } else if (postback == "3") {
      } else {
      }
    } else { // Quick Reply
      if (message.message.text == "2") {
      } else if (postback == "1") {
      } else if (postback == "0"){
      } else {
      }
    }
};

app.listen(3000, async () => {
  console.log("App is on port : 3000 ๐ฅณ");
  keepAppRunning();
});
